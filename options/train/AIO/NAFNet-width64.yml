# ------------------------------------------------------------------------
# Copyright (c) 2022 megvii-model. All Rights Reserved.
# ------------------------------------------------------------------------
# Modified from BasicSR (https://github.com/xinntao/BasicSR)
# Copyright 2018-2020 BasicSR Authors
# ------------------------------------------------------------------------
# general settings
name: NAFNet-AIOv2.1-width64
model_type: AIOModel
scale: 1
num_gpu: 8
manual_seed: &seed 2221101

args:
  data: configs/data_all_v2.1.json
  # data: configs/data_gopro.nongamma.json
  balance_data: by_dataset
  train_batch_size: 8
  # test_batch_size: 8
  resolution: 256
  train_resize: False
  train_flip_rotate: True
  test_resize: True
  dataloader_workers: 8
  epochs: 400
  overlap: 0
  seed: *seed
  prompt_strategy: 'no'
  cfg_drop_prob: 0

datasets:
  train:
    name: aio-train
    # type: PairedImageDataset
    # dataroot_gt: ./datasets/GoPro/train/sharp_crops.lmdb
    # dataroot_lq: ./datasets/GoPro/train/blur_crops.lmdb
    # data_json: configs/data/gopro_nongamma_train.json

    # filename_tmpl: '{}'
    # io_backend:
    #   # type: lmdb

    # gt_size: 256
    # use_flip: true
    # use_rot: true

    # # data loader
    # use_shuffle: true
    # num_worker_per_gpu: 8
    # batch_size_per_gpu: 8
    # dataset_enlarge_ratio: 1
    # prefetch_mode: ~

  val:
    name: aio-test
    # type: PairedImageDataset
    # dataroot_gt: ./datasets/GoPro/test/target.lmdb
    # dataroot_lq: ./datasets/GoPro/test/input.lmdb
    # data_json: configs/data/gopro_nongamma_test.json
    # io_backend:
      # type: lmdb


network_g:
  type: NAFNetLocal
  width: 64
  enc_blk_nums: [1, 1, 1, 28]
  middle_blk_num: 1
  dec_blk_nums: [1, 1, 1, 1]

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: AdamW
    lr: !!float 1e-3
    weight_decay: !!float 1e-3
    betas: [0.9, 0.9]

  scheduler:
    type: TrueCosineAnnealingLR
    T_max: &TOTAL_ITER 400_000
    eta_min: !!float 1e-7

  total_iter: *TOTAL_ITER
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: PSNRLoss
    loss_weight: 1
    reduction: mean

# validation settings
val:
  val_freq: !!float 1  # originally 2e4
  save_img: false


  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 1
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
